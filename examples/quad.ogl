width  = 320
height = 300
name = The Sphere
#attr = GLUT_DEPTH|GLUT_RGB|GLUT_DOUBLE

MAIN:

Init();

Reshape();
Draw();

#gluDeleteQuadric($quadObj);

Init:
    @colorIndexes = (0, 200, 255);
    @ambient = (0.1, 0.1, 0.1, 1.0);
    @diffuse = (0.5, 1.0, 1.0, 1.0);
    @position = (90.0, 90.0, 150.0, 0.0);
    @front_mat_shininess = (30.0);
    @front_mat_specular = (0.2, 0.2, 0.2, 1.0);
		@front_mat_diffuse = (0.5, 0.28, 0.38, 1.0);
		@back_mat_shininess = (50.0);
		@back_mat_specular = (0.5, 0.5, 0.2, 1.0);
		@back_mat_diffuse = (1.0, 1.0, 0.2, 1.0);
    @lmodel_ambient = (1.0, 1.0, 1.0, 1.0);
    $lmodel_twoside = GL_TRUE;
    $decal = GL_DECAL;
    $repeat = GL_REPEAT;
    $nearest = GL_NEAREST;

    glClearColor(0.0, 0.0, 0.0, 0.0);
    
    glEnable(GL_DEPTH_TEST);

    glLightfv(GL_LIGHT0, GL_AMBIENT, %ambient);
    glLightfv(GL_LIGHT0, GL_DIFFUSE, %diffuse);
    glLightfv(GL_LIGHT0, GL_POSITION, %position);
    glLightModelfv(GL_LIGHT_MODEL_AMBIENT, $lmodel_ambient);
    glLightModelfv(GL_LIGHT_MODEL_TWO_SIDE, $lmodel_twoside);
    glEnable(GL_LIGHTING);
    glEnable(GL_LIGHT0);

    glMaterialfv(GL_FRONT, GL_SHININESS, %front_mat_shininess);
    glMaterialfv(GL_FRONT, GL_SPECULAR, %front_mat_specular);
    glMaterialfv(GL_FRONT, GL_DIFFUSE, %front_mat_diffuse);
    glMaterialfv(GL_BACK, GL_SHININESS, %back_mat_shininess);
    glMaterialfv(GL_BACK, GL_SPECULAR, %back_mat_specular);
    glMaterialfv(GL_BACK, GL_DIFFUSE, %back_mat_diffuse);
		glMaterialiv( GL_FRONT_AND_BACK, GL_COLOR_INDEXES, %colorIndexes);


    glTexEnvfv(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, $decal);
    glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, $repeat);
    glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, $repeat);
    glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, $nearest);
    glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, $nearest);

		$quadObj = gluNewQuadric();
#    gluQuadricDrawStyle( $quadObj, GLU_FILL );
#    gluQuadricNormals( $quadObj, GLU_SMOOTH );

    $xRotation = 30.0;
    $yRotation = 30.0;
    $zRotation = 0.0;
    $radius1 = 1;
    $radius2 = 0.5;
    $angle1 = 90;
    $angle2 = 180;
    $slices = 16;
    $stacks = 10;
    $height = 2;


Reshape:

#    glViewport(0, 0, $width, $height);

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glFrustum(-1, 1, -1, 1, 1, 10);
    gluLookAt(2, 2, 2, 0, 0, 0, 0, 0, 1);
    glMatrixMode(GL_MODELVIEW);


#	gluQuadricDrawStyle($quadObj, GLU_FILL);
#	gluQuadricDrawStyle($quadObj, GLU_POINT);
	gluQuadricDrawStyle($quadObj, GLU_LINE);
#	gluQuadricDrawStyle($quadObj, GLU_SILHOUETTE);

 	    glShadeModel(GL_SMOOTH);
#	    gluQuadricNormals($quadObj, GLU_SMOOTH);

#	    glShadeModel(GL_FLAT);
#	    gluQuadricNormals($quadObj, GLU_FLAT);

 #GLU_OUTSIDE
#	gluQuadricOrientation($quadObj, GLU_INSIDE); 

 #   gluQuadricTexture($quadObj, GL_TRUE);
#	  glEnable(GL_TEXTURE_2D);

   #gluQuadricTexture($quadObj, GL_FALSE);
   #glDisable(GL_TEXTURE_2D);

	#glDisable(GL_CULL_FACE);

	glEnable(GL_CULL_FACE);
	glCullFace(GL_FRONT);

	#glEnable(GL_CULL_FACE);
	#glCullFace(GL_BACK);

	glFrontFace(GL_CW);
	#glFrontFace(GL_CCW);

  #glDisable(GL_DITHER);
	glEnable(GL_DITHER)



Draw:

    glLoadIdentity();
    glRotatef($xRotation, 1, 0, 0);
    glRotatef($yRotation, 0, 1, 0);
    glRotatef($zRotation, 0, 0, 1);

    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);

    glColor3f(1.0, 1.0, 1.0);

#				glTranslatef(0, 0, -$height/2);
#				gluCylinder($quadObj, $radius1, $radius2, $height, $slices, $stacks);

				gluSphere($quadObj, $radius1, $slices, $stacks);

				#gluPartialDisk($quadObj, $radius2, $radius1, $slices, $stacks, $angle1, $angle2);

				#gluDisk($quadObj, $radius2, $radius1, $slices, $stacks);
		
    glFlush();
		
#		swapBuffers();


